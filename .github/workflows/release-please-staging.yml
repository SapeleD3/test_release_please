name: Release please staging

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      nj--tag_name: ${{ steps.release.outputs.nj--tag_name}}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          target-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: relese-please/staging/release-please-config.json
          manifest-file: relese-please/staging/.release-please-manifest.json
      - name: Extract Outputs
        id: extract_outputs
        run: |
          tag_name="${{ steps.release.outputs.tag_name }}"
          releases_created="${{ steps.release.outputs.releases_created }}"
          version="${{ steps.release.outputs.version }}"
          secrets="${{ secrets.ENV_FILE }}"

          echo "Tag Name: $tag_name"
          echo "Releases Created: $releases_created"
          echo "Version: $version"
          echo "Secrets: $secrets"

          # Set outputs for further steps
          echo "tag_name=$tag_name" >> $GITHUB_ENV
          echo "releases_created=$releases_created" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_ENV

      - name: Checkout code
        id: checkout_code
        if: env.releases_created == 'true' && env.tag_name != ''
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        if: env.releases_created == 'true' && env.tag_name != ''
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        if: env.releases_created == 'true' && env.tag_name != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: env.releases_created == 'true' && env.tag_name != ''
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            sapeled3/nj-releaseplease:${{ env.tag_name }}
            sapeled3/nj-releaseplease:latest
  deploy-dev:
    runs-on: ubuntu-latest
    needs: release-please

    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to dev server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} << EOF
            cd /home/staging/test
            docker pull sapeled3/nj-releaseplease
            docker stop nj-releaseplease || true
            docker rm nj-releaseplease || true
            echo ENV_FILE="$${{ secrets.ENV_FILE }}" >> .env
            cat .env
            docker run --env-file ./env -d -p 8080:8000 --name nj-releaseplease sapeled3/nj-releaseplease:latest EOF
